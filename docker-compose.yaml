services:
  backend:
    build: .
    command: ["/app/webserver"]
    ports:
      - "${PORT:-8080}:8080"
    environment:
      - POSTGRES_URL=postgresql://${DB_USER:-sguhack}@db/${DB_NAME:-sguhack}?sslmode=disable
      - REDIS_URL=redis://dragonfly/0
      - SESSION_COOKIE_SECURE=false
      - SESSION_COOKIE_DOMAIN=${SESSION_COOKIE_DOMAIN:-localhost:5173}
      - ALLOW_ORIGIN=${ALLOW_ORIGIN:-http://localhost:5173}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-123}
    depends_on:
      - db
      - dragonfly
    env_file:
      - .env

  initdb:
    build: .
    command: ["/app/runsql"]
    environment:
      - POSTGRES_URL=postgresql://${DB_USER:-sguhack}@db/${DB_NAME:-sguhack}?sslmode=disable
      - REDIS_URL=redis://dragonfly/0
      - SESSION_COOKIE_SECURE=false
      - SESSION_COOKIE_DOMAIN=${SESSION_COOKIE_DOMAIN:-localhost:5173}
      - ALLOW_ORIGIN=${ALLOW_ORIGIN:-http://localhost:5173}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-123}
      - SQL_FILE=/app/db/CreateTables.sql
      - CREATE_ADMIN=true
    depends_on:
      - backend
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./db
        target: /app/db

  dropdb:
    build: .
    command: ["/app/runsql"]
    environment:
      - POSTGRES_URL=postgresql://${DB_USER:-sguhack}@db/${DB_NAME:-sguhack}?sslmode=disable
      - REDIS_URL=redis://dragonfly/0
      - SESSION_COOKIE_SECURE=false
      - SESSION_COOKIE_DOMAIN=${SESSION_COOKIE_DOMAIN:-localhost:5173}
      - ALLOW_ORIGIN=${ALLOW_ORIGIN:-http://localhost:5173}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-123}
      - SQL_FILE=/app/db/DropTables.sql
      - CREATE_ADMIN=false
    depends_on:
      - backend
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./db
        target: /app/db

  db:
    image: postgres:17.1-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=${DB_NAME:-sguhack}
      - POSTGRES_USER=${DB_USER:-sguhack}
    healthcheck:
      test: "pg_isready --username=${DB_USER:-sguhack} --database=${DB_NAME:-sguhack}"
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    env_file:
      - .env

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    ulimits:
      memlock: -1
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    env_file:
      - .env
